// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Case_Management;
import utilities.MySuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>manageCase</b><br>
 * Generated     : <b>2014/11/26 11:37:32 AM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows Server 2008 R2 x86 6.1 <br>
 * 
 * @since  November 26, 2014
 * @author Administrator
 */
public abstract class manageCaseHelper extends utilities.MySuperHelper
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * Cancelbutton: with default state.
	 *		.text : Cancel
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		class :  x-btn-text
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_cancelbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_cancelbutton"));
	}
	/**
	 * Cancelbutton: with specific test context and state.
	 *		.text : Cancel
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		class :  x-btn-text
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_cancelbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_cancelbutton"), anchor, flags);
	}
	
	/**
	 * Createbutton: with default state.
	 *		.text : Create
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		class :  x-btn-text
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_createbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_createbutton"));
	}
	/**
	 * Createbutton: with specific test context and state.
	 *		.text : Create
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		class :  x-btn-text
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_createbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_createbutton"), anchor, flags);
	}
	
	/**
	 * deleteCaseYesbutton: with default state.
	 *		.text : Yes
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_deleteCaseYesbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_deleteCaseYesbutton"));
	}
	/**
	 * deleteCaseYesbutton: with specific test context and state.
	 *		.text : Yes
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_deleteCaseYesbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_deleteCaseYesbutton"), anchor, flags);
	}
	
	/**
	 * DeleteCasebutton: with default state.
	 *		.text : Delete Case
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text delete-tb-icon
	 */
	protected GuiTestObject button_deleteCasebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_deleteCasebutton"));
	}
	/**
	 * DeleteCasebutton: with specific test context and state.
	 *		.text : Delete Case
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text delete-tb-icon
	 */
	protected GuiTestObject button_deleteCasebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_deleteCasebutton"), anchor, flags);
	}
	
	/**
	 * EditCaseCM: with default state.
	 *		.text : Edit Case
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		class :  x-btn-text edit-tb-icon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_editCaseCM() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_editCaseCM"));
	}
	/**
	 * EditCaseCM: with specific test context and state.
	 *		.text : Edit Case
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		class :  x-btn-text edit-tb-icon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_editCaseCM(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_editCaseCM"), anchor, flags);
	}
	
	/**
	 * EditCasebutton: with default state.
	 *		.text : Edit Case
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text edit-tb-icon
	 */
	protected GuiTestObject button_editCasebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_editCasebutton"));
	}
	/**
	 * EditCasebutton: with specific test context and state.
	 *		.text : Edit Case
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text edit-tb-icon
	 */
	protected GuiTestObject button_editCasebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_editCasebutton"), anchor, flags);
	}
	
	/**
	 * errorMessage_OKbutton: with default state.
	 *		.text : OK
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_errorMessage_OKbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_errorMessage_OKbutton"));
	}
	/**
	 * errorMessage_OKbutton: with specific test context and state.
	 *		.text : OK
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_errorMessage_OKbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_errorMessage_OKbutton"), anchor, flags);
	}
	
	/**
	 * NewCasebutton: with default state.
	 *		.text : New Case
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		class :  x-btn-text new-tb-icon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_newCasebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_newCasebutton"));
	}
	/**
	 * NewCasebutton: with specific test context and state.
	 *		.text : New Case
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		class :  x-btn-text new-tb-icon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_newCasebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_newCasebutton"), anchor, flags);
	}
	
	/**
	 * NewCasebutton: with default state.
	 *		class :  x-btn-text new-tb-icon
	 * 		.text : New Case
	 * 		type : button
	 * 		.class : Html.BUTTON
	 */
	protected GuiTestObject button_newCasebutton2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_newCasebutton2"));
	}
	/**
	 * NewCasebutton: with specific test context and state.
	 *		class :  x-btn-text new-tb-icon
	 * 		.text : New Case
	 * 		type : button
	 * 		.class : Html.BUTTON
	 */
	protected GuiTestObject button_newCasebutton2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_newCasebutton2"), anchor, flags);
	}
	
	/**
	 * OpenCasebutton: with default state.
	 *		.text : Open Case
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text load-tb-icon
	 */
	protected GuiTestObject button_openCasebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_openCasebutton"));
	}
	/**
	 * OpenCasebutton: with specific test context and state.
	 *		.text : Open Case
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text load-tb-icon
	 */
	protected GuiTestObject button_openCasebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_openCasebutton"), anchor, flags);
	}
	
	/**
	 * SaveCasebutton: with default state.
	 *		.text : Save Case
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text save-tb-icon
	 */
	protected GuiTestObject button_saveCasebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_saveCasebutton"));
	}
	/**
	 * SaveCasebutton: with specific test context and state.
	 *		.text : Save Case
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text save-tb-icon
	 */
	protected GuiTestObject button_saveCasebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_saveCasebutton"), anchor, flags);
	}
	
	/**
	 * Savebutton: with default state.
	 *		.text : Save
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		.browserName : MS Internet Explorer
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_savebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_savebutton"));
	}
	/**
	 * Savebutton: with specific test context and state.
	 *		.text : Save
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		.browserName : MS Internet Explorer
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_savebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_savebutton"), anchor, flags);
	}
	
	/**
	 * allMenuon: with default state.
	 *		type : checkbox
	 * 		.class : Html.INPUT.checkbox
	 * 		name : allMenu
	 * 		value : on
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_allMenuon() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_allMenuon"));
	}
	/**
	 * allMenuon: with specific test context and state.
	 *		type : checkbox
	 * 		.class : Html.INPUT.checkbox
	 * 		name : allMenu
	 * 		value : on
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_allMenuon(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_allMenuon"), anchor, flags);
	}
	
	/**
	 * displaySelected: with default state.
	 *		type : checkbox
	 * 		.id : display_selected
	 * 		.class : Html.INPUT.checkbox
	 * 		name : selMenu
	 * 		value : on
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_displaySelected() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_displaySelected"));
	}
	/**
	 * displaySelected: with specific test context and state.
	 *		type : checkbox
	 * 		.id : display_selected
	 * 		.class : Html.INPUT.checkbox
	 * 		name : selMenu
	 * 		value : on
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_displaySelected(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_displaySelected"), anchor, flags);
	}
	
	/**
	 * loadAllCaseData: with default state.
	 *		type : checkbox
	 * 		.class : Html.INPUT.checkbox
	 * 		value : on
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_loadAllCaseData() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_loadAllCaseData"));
	}
	/**
	 * loadAllCaseData: with specific test context and state.
	 *		type : checkbox
	 * 		.class : Html.INPUT.checkbox
	 * 		value : on
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_loadAllCaseData(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_loadAllCaseData"), anchor, flags);
	}
	
	/**
	 * caseDetailWindow: with default state.
	 *		.id : caseDetailWindow
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_caseDetailWindow() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_caseDetailWindow"));
	}
	/**
	 * caseDetailWindow: with specific test context and state.
	 *		.id : caseDetailWindow
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_caseDetailWindow(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_caseDetailWindow"), anchor, flags);
	}
	
	/**
	 * caseListDIV: with default state.
	 *		.className : x-grid3-body
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_caseListDIV() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_caseListDIV"));
	}
	/**
	 * caseListDIV: with specific test context and state.
	 *		.className : x-grid3-body
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_caseListDIV(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_caseListDIV"), anchor, flags);
	}
	
	/**
	 * caseListWindow: with default state.
	 *		id : caseListWindow
	 * 		.id : caseListWindow
	 * 		.class : Html.DIV
	 * 		.contentText : RegularExpression( Case ListName.*)
	 */
	protected GuiTestObject html_caseListWindow() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_caseListWindow"));
	}
	/**
	 * caseListWindow: with specific test context and state.
	 *		id : caseListWindow
	 * 		.id : caseListWindow
	 * 		.class : Html.DIV
	 * 		.contentText : RegularExpression( Case ListName.*)
	 */
	protected GuiTestObject html_caseListWindow(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_caseListWindow"), anchor, flags);
	}
	
	/**
	 * errorMessage: with default state.
	 *		.className : x-window-bwrap
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.contentText : RegularExpression(^(You must give the case a unique name.).*|^(You must select a ...
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_errorMessage() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_errorMessage"));
	}
	/**
	 * errorMessage: with specific test context and state.
	 *		.className : x-window-bwrap
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.contentText : RegularExpression(^(You must give the case a unique name.).*|^(You must select a ...
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_errorMessage(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_errorMessage"), anchor, flags);
	}
	
	/**
	 * visibleDropDownList: with default state.
	 *		.className : x-layer x-combo-list 
	 * 		.class : Html.DIV
	 * 		style : RegularExpression(.*VISIBILITY: visible.*)
	 */
	protected GuiTestObject html_visibleDropDownList() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_visibleDropDownList"));
	}
	/**
	 * visibleDropDownList: with specific test context and state.
	 *		.className : x-layer x-combo-list 
	 * 		.class : Html.DIV
	 * 		style : RegularExpression(.*VISIBILITY: visible.*)
	 */
	protected GuiTestObject html_visibleDropDownList(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_visibleDropDownList"), anchor, flags);
	}
	
	/**
	 * locationAndUsers: with default state.
	 *		.text : Locations & Users
	 * 		.class : Html.A
	 * 		class : x-tab-right
	 */
	protected GuiTestObject link_locationAndUsers() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_locationAndUsers"));
	}
	/**
	 * locationAndUsers: with specific test context and state.
	 *		.text : Locations & Users
	 * 		.class : Html.A
	 * 		class : x-tab-right
	 */
	protected GuiTestObject link_locationAndUsers(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_locationAndUsers"), anchor, flags);
	}
	
	/**
	 * class: with default state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : class
	 * 		class : x-form-text x-form-field x-trigger-noedit
	 */
	protected TextGuiTestObject text_class() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_class"));
	}
	/**
	 * class: with specific test context and state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : class
	 * 		class : x-form-text x-form-field x-trigger-noedit
	 */
	protected TextGuiTestObject text_class(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_class"), anchor, flags);
	}
	
	/**
	 * closeDate: with default state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : closeDate
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_closeDate() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_closeDate"));
	}
	/**
	 * closeDate: with specific test context and state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : closeDate
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_closeDate(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_closeDate"), anchor, flags);
	}
	
	/**
	 * desc: with default state.
	 *		.class : Html.TEXTAREA
	 * 		.name : desc
	 * 		class : RegularExpression(x-form-textarea x-form-field( x-form-focus)*)
	 */
	protected TextGuiTestObject text_desc() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_desc"));
	}
	/**
	 * desc: with specific test context and state.
	 *		.class : Html.TEXTAREA
	 * 		.name : desc
	 * 		class : RegularExpression(x-form-textarea x-form-field( x-form-focus)*)
	 */
	protected TextGuiTestObject text_desc(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_desc"), anchor, flags);
	}
	
	/**
	 * filter: with default state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		class : x-form-text x-form-field search_field_effect x-box-item x-form-empty-field
	 */
	protected TextGuiTestObject text_filter() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_filter"));
	}
	/**
	 * filter: with specific test context and state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		class : x-form-text x-form-field search_field_effect x-box-item x-form-empty-field
	 */
	protected TextGuiTestObject text_filter(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_filter"), anchor, flags);
	}
	
	/**
	 * id: with default state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : disp
	 * 		class : RegularExpression(x-form-text x-form-field( x-form-focus)*)
	 */
	protected TextGuiTestObject text_id() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_id"));
	}
	/**
	 * id: with specific test context and state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : disp
	 * 		class : RegularExpression(x-form-text x-form-field( x-form-focus)*)
	 */
	protected TextGuiTestObject text_id(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_id"), anchor, flags);
	}
	
	/**
	 * openDate: with default state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : openDate
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_openDate() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_openDate"));
	}
	/**
	 * openDate: with specific test context and state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : openDate
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_openDate(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_openDate"), anchor, flags);
	}
	
	/**
	 * status: with default state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : status
	 * 		class : x-form-text x-form-field x-trigger-noedit
	 */
	protected TextGuiTestObject text_status() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_status"));
	}
	/**
	 * status: with specific test context and state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : status
	 * 		class : x-form-text x-form-field x-trigger-noedit
	 */
	protected TextGuiTestObject text_status(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_status"), anchor, flags);
	}
	
	/**
	 * subType: with default state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : subType
	 * 		class : x-form-text x-form-field x-trigger-noedit
	 */
	protected TextGuiTestObject text_subType() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_subType"));
	}
	/**
	 * subType: with specific test context and state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : subType
	 * 		class : x-form-text x-form-field x-trigger-noedit
	 */
	protected TextGuiTestObject text_subType(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_subType"), anchor, flags);
	}
	
	/**
	 * type: with default state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : type
	 * 		class : x-form-text x-form-field x-trigger-noedit
	 */
	protected TextGuiTestObject text_type() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_type"));
	}
	/**
	 * type: with specific test context and state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		name : type
	 * 		class : x-form-text x-form-field x-trigger-noedit
	 */
	protected TextGuiTestObject text_type(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_type"), anchor, flags);
	}
	
	

	protected manageCaseHelper()
	{
		setScriptName("Case_Management.manageCase");
	}
	
}

