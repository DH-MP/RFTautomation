// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.NetmailAdminUUI;
import utilities.MySuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Storage</b><br>
 * Generated     : <b>2015/01/12 1:07:35 AM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows Server 2008 R2 x86 6.1 <br>
 * 
 * @since  January 12, 2015
 * @author Administrator
 */
public abstract class StorageHelper extends utilities.MySuperHelper
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * AddButton: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Add 
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_addButton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addButton"));
	}
	/**
	 * AddButton: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Add 
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_addButton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addButton"), anchor, flags);
	}
	
	/**
	 * HtmlDialogButtonOK: with default state.
	 *		.text : OK
	 * 		.class : Html.DialogButton
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_htmlDialogButtonOK() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_htmlDialogButtonOK"));
	}
	/**
	 * HtmlDialogButtonOK: with specific test context and state.
	 *		.text : OK
	 * 		.class : Html.DialogButton
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_htmlDialogButtonOK(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_htmlDialogButtonOK"), anchor, flags);
	}
	
	/**
	 * Nextbutton: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : BT_Next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_nextbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextbutton"));
	}
	/**
	 * Nextbutton: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : BT_Next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_nextbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextbutton"), anchor, flags);
	}
	
	/**
	 * Removebutton: with default state.
	 *		.id : CBT_Remote_Device
	 * 		.type : button
	 * 		.value : Remove
	 * 		.class : Html.INPUT.button
	 * 		.classIndex : 2
	 */
	protected GuiTestObject button_removebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_removebutton"));
	}
	/**
	 * Removebutton: with specific test context and state.
	 *		.id : CBT_Remote_Device
	 * 		.type : button
	 * 		.value : Remove
	 * 		.class : Html.INPUT.button
	 * 		.classIndex : 2
	 */
	protected GuiTestObject button_removebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_removebutton"), anchor, flags);
	}
	
	/**
	 * Savebutton: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Save
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_savebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_savebutton"));
	}
	/**
	 * Savebutton: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Save
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 1
	 */
	protected GuiTestObject button_savebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_savebutton"), anchor, flags);
	}
	
	/**
	 * StorageDeviceFileSystem: with default state.
	 *		.title : Storage Device - File System
	 * 		.class : Html.HtmlDocument
	 */
	protected DocumentTestObject document_storageDeviceFileSyst() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_storageDeviceFileSyst"));
	}
	/**
	 * StorageDeviceFileSystem: with specific test context and state.
	 *		.title : Storage Device - File System
	 * 		.class : Html.HtmlDocument
	 */
	protected DocumentTestObject document_storageDeviceFileSyst(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_storageDeviceFileSyst"), anchor, flags);
	}
	
	/**
	 * divDeviceTypes: with default state.
	 *		.id : divDeviceTypes
	 * 		.className : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_divDeviceTypes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divDeviceTypes"));
	}
	/**
	 * divDeviceTypes: with specific test context and state.
	 *		.id : divDeviceTypes
	 * 		.className : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_divDeviceTypes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divDeviceTypes"), anchor, flags);
	}
	
	/**
	 * retentionDevicesList: with default state.
	 *		.text : castor [ Netmail Store ] Case Management Device [ Case Management ] mp [ File Sy ...
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CSelect_RetentionDevices
	 * 		class : 
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_retentionDevicesList() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_retentionDevicesList"));
	}
	/**
	 * retentionDevicesList: with specific test context and state.
	 *		.text : castor [ Netmail Store ] Case Management Device [ Case Management ] mp [ File Sy ...
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CSelect_RetentionDevices
	 * 		class : 
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_retentionDevicesList(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_retentionDevicesList"), anchor, flags);
	}
	
	/**
	 * login: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : CLogin
	 * 		.classIndex : 2
	 * 		class : 
	 */
	protected TextGuiTestObject text_login() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_login"));
	}
	/**
	 * login: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : CLogin
	 * 		.classIndex : 2
	 * 		class : 
	 */
	protected TextGuiTestObject text_login(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_login"), anchor, flags);
	}
	
	/**
	 * name: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : CName
	 * 		class : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_name() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_name"));
	}
	/**
	 * name: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : CName
	 * 		class : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_name(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_name"), anchor, flags);
	}
	
	/**
	 * password: with default state.
	 *		.id : 
	 * 		.type : password
	 * 		.title : 
	 * 		.class : Html.INPUT.password
	 * 		.name : CPassword
	 * 		.classIndex : 0
	 * 		class : 
	 */
	protected TextGuiTestObject text_password() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_password"));
	}
	/**
	 * password: with specific test context and state.
	 *		.id : 
	 * 		.type : password
	 * 		.title : 
	 * 		.class : Html.INPUT.password
	 * 		.name : CPassword
	 * 		.classIndex : 0
	 * 		class : 
	 */
	protected TextGuiTestObject text_password(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_password"), anchor, flags);
	}
	
	/**
	 * path: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : CServiceURL
	 * 		class : 
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_path() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_path"));
	}
	/**
	 * path: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : CServiceURL
	 * 		class : 
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_path(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_path"), anchor, flags);
	}
	
	

	protected StorageHelper()
	{
		setScriptName("NetmailAdminUUI.Storage");
	}
	
}

