// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.NetmailSearch_AdvanceSearch;
import utilities.MySuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Message_NormalUser</b><br>
 * Generated     : <b>2014/06/20 3:49:56 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows Server 2008 R2 x86 6.1 <br>
 * 
 * @since  June 20, 2014
 * @author Administrator
 */
public abstract class Message_NormalUserHelper extends utilities.MySuperHelper
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * AdvancedSearchbutton: with default state.
	 *		.text : Advanced Search
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class : RegularExpression(.*x-btn-text)
	 */
	protected GuiTestObject button_advancedSearchbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_advancedSearchbutton"));
	}
	/**
	 * AdvancedSearchbutton: with specific test context and state.
	 *		.text : Advanced Search
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class : RegularExpression(.*x-btn-text)
	 */
	protected GuiTestObject button_advancedSearchbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_advancedSearchbutton"), anchor, flags);
	}
	
	/**
	 * Applybutton: with default state.
	 *		.text : Apply
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_applybutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_applybutton"));
	}
	/**
	 * Applybutton: with specific test context and state.
	 *		.text : Apply
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_applybutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_applybutton"), anchor, flags);
	}
	
	/**
	 * Cancelsubmit: with default state.
	 *		.text : Cancel
	 * 		type : submit
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_cancelsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_cancelsubmit"));
	}
	/**
	 * Cancelsubmit: with specific test context and state.
	 *		.text : Cancel
	 * 		type : submit
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_cancelsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_cancelsubmit"), anchor, flags);
	}
	
	/**
	 * Clearsubmit: with default state.
	 *		.text : Clear
	 * 		type : submit
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_clearsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_clearsubmit"));
	}
	/**
	 * Clearsubmit: with specific test context and state.
	 *		.text : Clear
	 * 		type : submit
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_clearsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_clearsubmit"), anchor, flags);
	}
	
	/**
	 * ErrorOkayButton: with default state.
	 *		.text : OK
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		class :  x-btn-text
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_errorOkayButton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_errorOkayButton"));
	}
	/**
	 * ErrorOkayButton: with specific test context and state.
	 *		.text : OK
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		class :  x-btn-text
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_errorOkayButton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_errorOkayButton"), anchor, flags);
	}
	
	/**
	 * Searchsubmit: with default state.
	 *		.text : Search
	 * 		type : submit
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text advanced-tb-icon
	 */
	protected GuiTestObject button_searchsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_searchsubmit"));
	}
	/**
	 * Searchsubmit: with specific test context and state.
	 *		.text : Search
	 * 		type : submit
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text advanced-tb-icon
	 */
	protected GuiTestObject button_searchsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_searchsubmit"), anchor, flags);
	}
	
	/**
	 * ifCategoryon: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifCategory
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifCategoryon() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifCategoryon"));
	}
	/**
	 * ifCategoryon: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifCategory
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifCategoryon(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifCategoryon"), anchor, flags);
	}
	
	/**
	 * ifFromon: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifFrom
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifFromon() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifFromon"));
	}
	/**
	 * ifFromon: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifFrom
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifFromon(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifFromon"), anchor, flags);
	}
	
	/**
	 * ifItemTypeson: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifItemTypes
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifItemTypeson() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifItemTypeson"));
	}
	/**
	 * ifItemTypeson: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifItemTypes
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifItemTypeson(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifItemTypeson"), anchor, flags);
	}
	
	/**
	 * ifMessageon: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifMessage
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifMessageon() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifMessageon"));
	}
	/**
	 * ifMessageon: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifMessage
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifMessageon(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifMessageon"), anchor, flags);
	}
	
	/**
	 * ifRcvDateon: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifRcvDate
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifRcvDateon() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifRcvDateon"));
	}
	/**
	 * ifRcvDateon: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifRcvDate
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifRcvDateon(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifRcvDateon"), anchor, flags);
	}
	
	/**
	 * ifRecipienton: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifRecipient
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifRecipienton() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifRecipienton"));
	}
	/**
	 * ifRecipienton: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifRecipient
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifRecipienton(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifRecipienton"), anchor, flags);
	}
	
	/**
	 * ifSentDateon: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifSentDate
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifSentDateon() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifSentDateon"));
	}
	/**
	 * ifSentDateon: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifSentDate
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifSentDateon(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifSentDateon"), anchor, flags);
	}
	
	/**
	 * ifSubjecton: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifSubject
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifSubjecton() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifSubjecton"));
	}
	/**
	 * ifSubjecton: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifSubject
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_ifSubjecton(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifSubjecton"), anchor, flags);
	}
	
	/**
	 * ifpersonalsubjecton: with default state.
	 *		type : checkbox
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifpersonalsubject
	 * 		value : on
	 * 		.classIndex : 0
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_ifpersonalsubjecton() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifpersonalsubjecton"));
	}
	/**
	 * ifpersonalsubjecton: with specific test context and state.
	 *		type : checkbox
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : ifpersonalsubject
	 * 		value : on
	 * 		.classIndex : 0
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_ifpersonalsubjecton(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_ifpersonalsubjecton"), anchor, flags);
	}
	
	/**
	 * itemTypesAppointment: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : itemTypes
	 * 		value : appointment
	 * 		.classIndex : 0
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_itemTypesappointment() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_itemTypesappointment"));
	}
	/**
	 * itemTypesAppointment: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : itemTypes
	 * 		value : appointment
	 * 		.classIndex : 0
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_itemTypesappointment(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_itemTypesappointment"), anchor, flags);
	}
	
	/**
	 * itemTypesmail: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : itemTypes
	 * 		value : mail
	 * 		.classIndex : 0
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_itemTypesmail() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_itemTypesmail"));
	}
	/**
	 * itemTypesmail: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : itemTypes
	 * 		value : mail
	 * 		.classIndex : 0
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_itemTypesmail(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_itemTypesmail"), anchor, flags);
	}
	
	/**
	 * itemTypesnote: with default state.
	 *		type : checkbox
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : itemTypes
	 * 		value : note
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_itemTypesnote() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_itemTypesnote"));
	}
	/**
	 * itemTypesnote: with specific test context and state.
	 *		type : checkbox
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : itemTypes
	 * 		value : note
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_itemTypesnote(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_itemTypesnote"), anchor, flags);
	}
	
	/**
	 * itemTypestask: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : itemTypes
	 * 		value : task
	 * 		.classIndex : 0
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_itemTypestask() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_itemTypestask"));
	}
	/**
	 * itemTypestask: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : itemTypes
	 * 		value : task
	 * 		.classIndex : 0
	 * 		class :  x-form-checkbox x-form-field
	 */
	protected ToggleGUITestObject checkBox_itemTypestask(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_itemTypestask"), anchor, flags);
	}
	
	/**
	 * searchEmbeddedMessageson: with default state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : searchEmbeddedMessages
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_searchEmbeddedMessage() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_searchEmbeddedMessage"));
	}
	/**
	 * searchEmbeddedMessageson: with specific test context and state.
	 *		.text : 
	 * 		type : checkbox
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.checkbox|Html\.INPUT)
	 * 		name : searchEmbeddedMessages
	 * 		class :  x-form-checkbox x-form-field
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_searchEmbeddedMessage(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_searchEmbeddedMessage"), anchor, flags);
	}
	
	/**
	 * messageBody: with default state.
	 *		.title : 
	 * 		.class : Html.HtmlDocument
	 * 		.url : about:blank
	 */
	protected DocumentTestObject document_messageBody() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_messageBody"));
	}
	/**
	 * messageBody: with specific test context and state.
	 *		.title : 
	 * 		.class : Html.HtmlDocument
	 * 		.url : about:blank
	 */
	protected DocumentTestObject document_messageBody(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_messageBody"), anchor, flags);
	}
	
	/**
	 * InvalidFormatRCV: with default state.
	 *		.text : RegularExpression(.*Received date range : Invalid date.*|.*Sent date range : Inv ...
	 * 		.className : ext-mb-text
	 * 		.title : 
	 * 		.class : Html.SPAN
	 */
	protected GuiTestObject html_invalidFormatRCV() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_invalidFormatRCV"));
	}
	/**
	 * InvalidFormatRCV: with specific test context and state.
	 *		.text : RegularExpression(.*Received date range : Invalid date.*|.*Sent date range : Inv ...
	 * 		.className : ext-mb-text
	 * 		.title : 
	 * 		.class : Html.SPAN
	 */
	protected GuiTestObject html_invalidFormatRCV(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_invalidFormatRCV"), anchor, flags);
	}
	
	/**
	 * mbCloseButtonDiv: with default state.
	 *		.className : x-tool x-tool-close
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_mbCloseButtonDiv() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_mbCloseButtonDiv"));
	}
	/**
	 * mbCloseButtonDiv: with specific test context and state.
	 *		.className : x-tool x-tool-close
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_mbCloseButtonDiv(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_mbCloseButtonDiv"), anchor, flags);
	}
	
	/**
	 * mbPropertiesUL: with default state.
	 *		.text : Message id 519C902C.dom1.po1.100.138656E.1.CA.1 Message Path xml/Mailbox/519C902 ...
	 * 		.title : 
	 * 		.class : Html.UL
	 * 		.classIndex : 0
	 * 		class : x-tree-root-ct x-tree-no-lines
	 */
	protected GuiTestObject html_mbPropertiesUL() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_mbPropertiesUL"));
	}
	/**
	 * mbPropertiesUL: with specific test context and state.
	 *		.text : Message id 519C902C.dom1.po1.100.138656E.1.CA.1 Message Path xml/Mailbox/519C902 ...
	 * 		.title : 
	 * 		.class : Html.UL
	 * 		.classIndex : 0
	 * 		class : x-tree-root-ct x-tree-no-lines
	 */
	protected GuiTestObject html_mbPropertiesUL(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_mbPropertiesUL"), anchor, flags);
	}
	
	/**
	 * MessagePanel: with default state.
	 *		.className :  x-panel x-panel-noborder x-border-panel
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_messagePanel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_messagePanel"));
	}
	/**
	 * MessagePanel: with specific test context and state.
	 *		.className :  x-panel x-panel-noborder x-border-panel
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject html_messagePanel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_messagePanel"), anchor, flags);
	}
	
	/**
	 * advanceSearch_MessageTab: with default state.
	 *		.text : Message
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 1
	 * 		class : x-tab-right
	 */
	protected GuiTestObject link_advanceSearch_MessageTab() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_advanceSearch_MessageTab"));
	}
	/**
	 * advanceSearch_MessageTab: with specific test context and state.
	 *		.text : Message
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 1
	 * 		class : x-tab-right
	 */
	protected GuiTestObject link_advanceSearch_MessageTab(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_advanceSearch_MessageTab"), anchor, flags);
	}
	
	/**
	 * advanceSearch_NetmailSearchTab: with default state.
	 *		.text : Netmail Search
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 1
	 * 		class : x-tab-right
	 */
	protected GuiTestObject link_advanceSearch_NetmailSear() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_advanceSearch_NetmailSear"));
	}
	/**
	 * advanceSearch_NetmailSearchTab: with specific test context and state.
	 *		.text : Netmail Search
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 1
	 * 		class : x-tab-right
	 */
	protected GuiTestObject link_advanceSearch_NetmailSear(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_advanceSearch_NetmailSear"), anchor, flags);
	}
	
	/**
	 * Attachment: with default state.
	 *		.text : Attachments
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_attachment() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_attachment"));
	}
	/**
	 * Attachment: with specific test context and state.
	 *		.text : Attachments
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_attachment(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_attachment"), anchor, flags);
	}
	
	/**
	 * ClearSearch: with default state.
	 *		.text : (clear search)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_clearSearch() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_clearSearch"));
	}
	/**
	 * ClearSearch: with specific test context and state.
	 *		.text : (clear search)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_clearSearch(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_clearSearch"), anchor, flags);
	}
	
	/**
	 * mbPropertyTab: with default state.
	 *		.text : Properties
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 1
	 * 		class : x-tab-right
	 */
	protected GuiTestObject link_mbPropertyTab() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_mbPropertyTab"));
	}
	/**
	 * mbPropertyTab: with specific test context and state.
	 *		.text : Properties
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 1
	 * 		class : x-tab-right
	 */
	protected GuiTestObject link_mbPropertyTab(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_mbPropertyTab"), anchor, flags);
	}
	
	/**
	 * Messages: with default state.
	 *		.text : Messages
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_messages() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_messages"));
	}
	/**
	 * Messages: with specific test context and state.
	 *		.text : Messages
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_messages(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_messages"), anchor, flags);
	}
	
	/**
	 * Approximate spelling: with default state.
	 *		.text : Approximate spelling
	 * 		.className : x-grid3-row-table
	 * 		.class : Html.TABLE
	 */
	protected StatelessGuiSubitemTestObject table_approximateSpelling() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_approximateSpelling"));
	}
	/**
	 * Approximate spelling: with specific test context and state.
	 *		.text : Approximate spelling
	 * 		.className : x-grid3-row-table
	 * 		.class : Html.TABLE
	 */
	protected StatelessGuiSubitemTestObject table_approximateSpelling(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_approximateSpelling"), anchor, flags);
	}
	
	/**
	 * ExactPhase: with default state.
	 *		.text : Exact phase
	 * 		.className : x-grid3-row-table
	 * 		.class : Html.TABLE
	 * 		tabIndex : 0
	 */
	protected StatelessGuiSubitemTestObject table_exactPhase() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_exactPhase"));
	}
	/**
	 * ExactPhase: with specific test context and state.
	 *		.text : Exact phase
	 * 		.className : x-grid3-row-table
	 * 		.class : Html.TABLE
	 * 		tabIndex : 0
	 */
	protected StatelessGuiSubitemTestObject table_exactPhase(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_exactPhase"), anchor, flags);
	}
	
	/**
	 * ForbiddenTerms: with default state.
	 *		.text : Forbidden Terms
	 * 		.className : x-grid3-row-table
	 * 		.class : Html.TABLE
	 */
	protected StatelessGuiSubitemTestObject table_forbiddenTerms() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_forbiddenTerms"));
	}
	/**
	 * ForbiddenTerms: with specific test context and state.
	 *		.text : Forbidden Terms
	 * 		.className : x-grid3-row-table
	 * 		.class : Html.TABLE
	 */
	protected StatelessGuiSubitemTestObject table_forbiddenTerms(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_forbiddenTerms"), anchor, flags);
	}
	
	/**
	 * ProximitySearch: with default state.
	 *		.text : Proximity search
	 * 		.className : x-grid3-row-table
	 * 		.class : Html.TABLE
	 */
	protected StatelessGuiSubitemTestObject table_proximitySearch() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_proximitySearch"));
	}
	/**
	 * ProximitySearch: with specific test context and state.
	 *		.text : Proximity search
	 * 		.className : x-grid3-row-table
	 * 		.class : Html.TABLE
	 */
	protected StatelessGuiSubitemTestObject table_proximitySearch(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_proximitySearch"), anchor, flags);
	}
	
	/**
	 * WordsStartingWith: with default state.
	 *		.text : Words starting with
	 * 		.className : x-grid3-row-table
	 * 		.class : Html.TABLE
	 */
	protected StatelessGuiSubitemTestObject table_wordsStartingWith() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_wordsStartingWith"));
	}
	/**
	 * WordsStartingWith: with specific test context and state.
	 *		.text : Words starting with
	 * 		.className : x-grid3-row-table
	 * 		.class : Html.TABLE
	 */
	protected StatelessGuiSubitemTestObject table_wordsStartingWith(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_wordsStartingWith"), anchor, flags);
	}
	
	/**
	 * category: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : category
	 * 		.classIndex : 5
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 */
	protected TextGuiTestObject text_category() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_category"));
	}
	/**
	 * category: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : category
	 * 		.classIndex : 5
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 */
	protected TextGuiTestObject text_category(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_category"), anchor, flags);
	}
	
	/**
	 * from: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : from
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_from() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_from"));
	}
	/**
	 * from: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : from
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_from(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_from"), anchor, flags);
	}
	
	/**
	 * mbFrom: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : from
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_mbFrom() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mbFrom"));
	}
	/**
	 * mbFrom: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : from
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_mbFrom(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mbFrom"), anchor, flags);
	}
	
	/**
	 * mbSentDate: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : sentDate
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_mbSentDate() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mbSentDate"));
	}
	/**
	 * mbSentDate: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : sentDate
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_mbSentDate(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mbSentDate"), anchor, flags);
	}
	
	/**
	 * mbReceivedDate: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : receivedDate
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_mbSentReceivedDate() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mbSentReceivedDate"));
	}
	/**
	 * mbReceivedDate: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : receivedDate
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_mbSentReceivedDate(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mbSentReceivedDate"), anchor, flags);
	}
	
	/**
	 * mbSubject: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : subject
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_mbSubject() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mbSubject"));
	}
	/**
	 * mbSubject: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : subject
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field
	 */
	protected TextGuiTestObject text_mbSubject(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mbSubject"), anchor, flags);
	}
	
	/**
	 * mbTo: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : to
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field x-trigger-noedit x-form-empty-field
	 */
	protected TextGuiTestObject text_mbTo() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mbTo"));
	}
	/**
	 * mbTo: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : to
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field x-trigger-noedit x-form-empty-field
	 */
	protected TextGuiTestObject text_mbTo(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_mbTo"), anchor, flags);
	}
	
	/**
	 * message: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : message
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_message() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_message"));
	}
	/**
	 * message: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : message
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject text_message(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_message"), anchor, flags);
	}
	
	/**
	 * netmailSearchInputField: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field x-abs-layout-item
	 */
	protected TextGuiTestObject text_netmailSearchInputField() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_netmailSearchInputField"));
	}
	/**
	 * netmailSearchInputField: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.classIndex : 0
	 * 		class : x-form-text x-form-field x-abs-layout-item
	 */
	protected TextGuiTestObject text_netmailSearchInputField(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_netmailSearchInputField"), anchor, flags);
	}
	
	/**
	 * personalsubject: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : personalsubject
	 * 		.classIndex : 4
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 */
	protected TextGuiTestObject text_personalsubject() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_personalsubject"));
	}
	/**
	 * personalsubject: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : personalsubject
	 * 		.classIndex : 4
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 */
	protected TextGuiTestObject text_personalsubject(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_personalsubject"), anchor, flags);
	}
	
	/**
	 * rcvDate1: with default state.
	 *		type : text
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : rcvDate1
	 * 		class : RegularExpression(x-form-text x-form-field( x-form-focus)*( x-item-disabled)*)
	 */
	protected TextGuiTestObject text_rcvDate1() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_rcvDate1"));
	}
	/**
	 * rcvDate1: with specific test context and state.
	 *		type : text
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : rcvDate1
	 * 		class : RegularExpression(x-form-text x-form-field( x-form-focus)*( x-item-disabled)*)
	 */
	protected TextGuiTestObject text_rcvDate1(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_rcvDate1"), anchor, flags);
	}
	
	/**
	 * rcvDate2: with default state.
	 *		type : text
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : rcvDate2
	 * 		class : RegularExpression(x-form-text x-form-field( x-form-focus)*( x-item-disabled)*)
	 */
	protected TextGuiTestObject text_rcvDate2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_rcvDate2"));
	}
	/**
	 * rcvDate2: with specific test context and state.
	 *		type : text
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : rcvDate2
	 * 		class : RegularExpression(x-form-text x-form-field( x-form-focus)*( x-item-disabled)*)
	 */
	protected TextGuiTestObject text_rcvDate2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_rcvDate2"), anchor, flags);
	}
	
	/**
	 * Recipient: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : Recipient
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_recipient() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_recipient"));
	}
	/**
	 * Recipient: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : Recipient
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject text_recipient(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_recipient"), anchor, flags);
	}
	
	/**
	 * sentDate1: with default state.
	 *		type : text
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : sentDate1
	 * 		class : RegularExpression(x-form-text x-form-field( x-form-focus)*( x-item-disabled)*)
	 */
	protected TextGuiTestObject text_sentDate1() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_sentDate1"));
	}
	/**
	 * sentDate1: with specific test context and state.
	 *		type : text
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : sentDate1
	 * 		class : RegularExpression(x-form-text x-form-field( x-form-focus)*( x-item-disabled)*)
	 */
	protected TextGuiTestObject text_sentDate1(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_sentDate1"), anchor, flags);
	}
	
	/**
	 * sentDate2: with default state.
	 *		type : text
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : sentDate2
	 * 		class : RegularExpression(x-form-text x-form-field( x-form-focus)*( x-item-disabled)*)
	 */
	protected TextGuiTestObject text_sentDate2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_sentDate2"));
	}
	/**
	 * sentDate2: with specific test context and state.
	 *		type : text
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : sentDate2
	 * 		class : RegularExpression(x-form-text x-form-field( x-form-focus)*( x-item-disabled)*)
	 */
	protected TextGuiTestObject text_sentDate2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_sentDate2"), anchor, flags);
	}
	
	/**
	 * sql: with default state.
	 *		.id : ext-comp-1175
	 * 		.title : 
	 * 		.class : Html.TEXTAREA
	 * 		.name : sql
	 * 		.classIndex : 0
	 * 		class : x-form-textarea x-form-field x-abs-layout-item
	 */
	protected TextGuiTestObject text_sql() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_sql"));
	}
	/**
	 * sql: with specific test context and state.
	 *		.id : ext-comp-1175
	 * 		.title : 
	 * 		.class : Html.TEXTAREA
	 * 		.name : sql
	 * 		.classIndex : 0
	 * 		class : x-form-textarea x-form-field x-abs-layout-item
	 */
	protected TextGuiTestObject text_sql(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_sql"), anchor, flags);
	}
	
	/**
	 * subject: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : subject
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_subject() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_subject"));
	}
	/**
	 * subject: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.title : 
	 * 		.class : RegularExpression(Html\.INPUT\.text|Html\.INPUT)
	 * 		name : subject
	 * 		class : RegularExpression(x-form-text x-form-field x-abs-layout-item( x-form-focus)*( x- ...
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_subject(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_subject"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point messageRow_IE_NEWMAIL object in the SUT.
	 */
	protected IFtVerificationPoint messageRow_IE_NEWMAILVP() 
	{
		return vp("messageRow_IE_NEWMAIL");
	}
	protected IFtVerificationPoint messageRow_IE_NEWMAILVP(TestObject anchor)
	{
		return vp("messageRow_IE_NEWMAIL", anchor);
	}
	
	/**
	 * Locate and return the verification point messageRow_IE_OPENEMAIL object in the SUT.
	 */
	protected IFtVerificationPoint messageRow_IE_OPENEMAILVP() 
	{
		return vp("messageRow_IE_OPENEMAIL");
	}
	protected IFtVerificationPoint messageRow_IE_OPENEMAILVP(TestObject anchor)
	{
		return vp("messageRow_IE_OPENEMAIL", anchor);
	}
	
	

	protected Message_NormalUserHelper()
	{
		setScriptName("NetmailSearch_AdvanceSearch.Message_NormalUser");
	}
	
}

