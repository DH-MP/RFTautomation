// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.TestCases.TC_842_SearchBoundaryStressTests;
import utilities.MySuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>TS_1009_SearchWith20PlusTabs</b><br>
 * Generated     : <b>2014/07/08 12:50:57 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows Server 2008 R2 x86 6.1 <br>
 * 
 * @since  July 08, 2014
 * @author Administrator
 */
public abstract class TS_1009_SearchWith20PlusTabsHelper extends utilities.MySuperHelper
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * AdvancedSearchbutton: with default state.
	 *		.text : Advanced Search
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_advancedSearchbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_advancedSearchbutton"));
	}
	/**
	 * AdvancedSearchbutton: with specific test context and state.
	 *		.text : Advanced Search
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_advancedSearchbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_advancedSearchbutton"), anchor, flags);
	}
	
	/**
	 * renameCancelbutton: with default state.
	 *		.text : Cancel
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_renameCancelbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_renameCancelbutton"));
	}
	/**
	 * renameCancelbutton: with specific test context and state.
	 *		.text : Cancel
	 * 		type : button
	 * 		.title : 
	 * 		.class : Html.BUTTON
	 * 		.name : 
	 * 		.classIndex : 0
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_renameCancelbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_renameCancelbutton"), anchor, flags);
	}
	
	/**
	 * renameOKbutton: with default state.
	 *		.text : OK
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_renameOKbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_renameOKbutton"));
	}
	/**
	 * renameOKbutton: with specific test context and state.
	 *		.text : OK
	 * 		type : button
	 * 		.class : Html.BUTTON
	 * 		class :  x-btn-text
	 */
	protected GuiTestObject button_renameOKbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_renameOKbutton"), anchor, flags);
	}
	
	/**
	 * addTabLI: with default state.
	 *		.text : +
	 * 		.class : Html.LI
	 */
	protected GuiTestObject html_addTabLI() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_addTabLI"));
	}
	/**
	 * addTabLI: with specific test context and state.
	 *		.text : +
	 * 		.class : Html.LI
	 */
	protected GuiTestObject html_addTabLI(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_addTabLI"), anchor, flags);
	}
	
	/**
	 * extGen3: with default state.
	 *		.class : Html.BODY
	 */
	protected GuiTestObject html_extGen3() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_extGen3"));
	}
	/**
	 * extGen3: with specific test context and state.
	 *		.class : Html.BODY
	 */
	protected GuiTestObject html_extGen3(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_extGen3"), anchor, flags);
	}
	
	/**
	 * tabPanelHeader: with default state.
	 *		.className : RegularExpression(x-tab-panel-header x-unselectable.*)
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_tabPanelHeader() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_tabPanelHeader"));
	}
	/**
	 * tabPanelHeader: with specific test context and state.
	 *		.className : RegularExpression(x-tab-panel-header x-unselectable.*)
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_tabPanelHeader(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_tabPanelHeader"), anchor, flags);
	}
	
	/**
	 * tabPanelUL: with default state.
	 *		.text : RegularExpression((Search)+ \+)
	 * 		.title : 
	 * 		.class : Html.UL
	 * 		.classIndex : 0
	 * 		class : x-tab-strip x-tab-strip-top
	 */
	protected GuiTestObject html_tabPanelUL() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_tabPanelUL"));
	}
	/**
	 * tabPanelUL: with specific test context and state.
	 *		.text : RegularExpression((Search)+ \+)
	 * 		.title : 
	 * 		.class : Html.UL
	 * 		.classIndex : 0
	 * 		class : x-tab-strip x-tab-strip-top
	 */
	protected GuiTestObject html_tabPanelUL(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_tabPanelUL"), anchor, flags);
	}
	
	/**
	 * tabScrollLeft: with default state.
	 *		.className : RegularExpression(^(x-tab-scroller-left).*)
	 * 		.class : Html.DIV
	 * 		class : RegularExpression(^(x-tab-scroller-left).*)
	 */
	protected GuiTestObject html_tabScrollLeft() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_tabScrollLeft"));
	}
	/**
	 * tabScrollLeft: with specific test context and state.
	 *		.className : RegularExpression(^(x-tab-scroller-left).*)
	 * 		.class : Html.DIV
	 * 		class : RegularExpression(^(x-tab-scroller-left).*)
	 */
	protected GuiTestObject html_tabScrollLeft(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_tabScrollLeft"), anchor, flags);
	}
	
	/**
	 * tabScrollRight: with default state.
	 *		unselectable : on
	 * 		.className : RegularExpression(^(x-tab-scroller-right).*)
	 * 		.class : Html.DIV
	 * 		class : RegularExpression(^(x-tab-scroller-righ).*)
	 */
	protected GuiTestObject html_tabScrollRight() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_tabScrollRight"));
	}
	/**
	 * tabScrollRight: with specific test context and state.
	 *		unselectable : on
	 * 		.className : RegularExpression(^(x-tab-scroller-right).*)
	 * 		.class : Html.DIV
	 * 		class : RegularExpression(^(x-tab-scroller-righ).*)
	 */
	protected GuiTestObject html_tabScrollRight(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_tabScrollRight"), anchor, flags);
	}
	
	/**
	 * addTab: with default state.
	 *		.text : +
	 * 		.class : Html.A
	 * 		class : x-tab-right
	 */
	protected GuiTestObject link_addTab() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_addTab"));
	}
	/**
	 * addTab: with specific test context and state.
	 *		.text : +
	 * 		.class : Html.A
	 * 		class : x-tab-right
	 */
	protected GuiTestObject link_addTab(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_addTab"), anchor, flags);
	}
	
	/**
	 * advClearSearch: with default state.
	 *		.text : (clear search)
	 * 		.class : Html.A
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_advClearSearch() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_advClearSearch"));
	}
	/**
	 * advClearSearch: with specific test context and state.
	 *		.text : (clear search)
	 * 		.class : Html.A
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_advClearSearch(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_advClearSearch"), anchor, flags);
	}
	
	/**
	 * tabClone: with default state.
	 *		.text : Clone
	 * 		.class : Html.A
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_tabClone() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_tabClone"));
	}
	/**
	 * tabClone: with specific test context and state.
	 *		.text : Clone
	 * 		.class : Html.A
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_tabClone(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_tabClone"), anchor, flags);
	}
	
	/**
	 * tabClose: with default state.
	 *		.text : Close
	 * 		.class : Html.A
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_tabClose() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_tabClose"));
	}
	/**
	 * tabClose: with specific test context and state.
	 *		.text : Close
	 * 		.class : Html.A
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_tabClose(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_tabClose"), anchor, flags);
	}
	
	/**
	 * tabCloseOther: with default state.
	 *		.text : Close Other Tabs
	 * 		.class : Html.A
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_tabCloseOther() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_tabCloseOther"));
	}
	/**
	 * tabCloseOther: with specific test context and state.
	 *		.text : Close Other Tabs
	 * 		.class : Html.A
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_tabCloseOther(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_tabCloseOther"), anchor, flags);
	}
	
	/**
	 * tabRename: with default state.
	 *		.text : Rename
	 * 		.class : Html.A
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_tabRename() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_tabRename"));
	}
	/**
	 * tabRename: with specific test context and state.
	 *		.text : Rename
	 * 		.class : Html.A
	 * 		class : x-menu-item
	 */
	protected GuiTestObject link_tabRename(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_tabRename"), anchor, flags);
	}
	
	/**
	 * renameInput: with default state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		class : ext-mb-input
	 */
	protected TextGuiTestObject text_renameInput() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_renameInput"));
	}
	/**
	 * renameInput: with specific test context and state.
	 *		type : text
	 * 		.class : Html.INPUT.text
	 * 		class : ext-mb-input
	 */
	protected TextGuiTestObject text_renameInput(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_renameInput"), anchor, flags);
	}
	
	

	protected TS_1009_SearchWith20PlusTabsHelper()
	{
		setScriptName("TestCases.TC_842_SearchBoundaryStressTests.TS_1009_SearchWith20PlusTabs");
	}
	
}

