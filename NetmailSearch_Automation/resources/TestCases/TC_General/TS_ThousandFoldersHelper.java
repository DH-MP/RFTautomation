// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.TestCases.TC_General;
import utilities.MySuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>TS_ThousandFolders</b><br>
 * Generated     : <b>2014/08/11 1:42:44 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows Server 2008 R2 x86 6.1 <br>
 * 
 * @since  August 11, 2014
 * @author Administrator
 */
public abstract class TS_ThousandFoldersHelper extends utilities.MySuperHelper
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * splitBarAdjust: with default state.
	 *		.id : RegularExpression(ext-comp-\d*-xsplit)
	 * 		.className : x-layout-split x-layout-split-west x-splitbar-h
	 * 		.class : Html.DIV
	 * 		class : x-layout-split x-layout-split-west x-splitbar-h
	 */
	protected GuiTestObject html_splitBarAdjust() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_splitBarAdjust"));
	}
	/**
	 * splitBarAdjust: with specific test context and state.
	 *		.id : RegularExpression(ext-comp-\d*-xsplit)
	 * 		.className : x-layout-split x-layout-split-west x-splitbar-h
	 * 		.class : Html.DIV
	 * 		class : x-layout-split x-layout-split-west x-splitbar-h
	 */
	protected GuiTestObject html_splitBarAdjust(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_splitBarAdjust"), anchor, flags);
	}
	
	/**
	 * quickCaseComboBox: with default state.
	 *		class : x-form-text x-form-field x-trigger-noedit
	 * 		.id : quickCaseComboBox
	 * 		type : text
	 * 		.class : Html.INPUT.text
	 * 		id : quickCaseComboBox
	 * 		name : quickCaseComboBox
	 * 		.name : quickCaseComboBox
	 */
	protected TextGuiTestObject text_quickCaseComboBox() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_quickCaseComboBox"));
	}
	/**
	 * quickCaseComboBox: with specific test context and state.
	 *		class : x-form-text x-form-field x-trigger-noedit
	 * 		.id : quickCaseComboBox
	 * 		type : text
	 * 		.class : Html.INPUT.text
	 * 		id : quickCaseComboBox
	 * 		name : quickCaseComboBox
	 * 		.name : quickCaseComboBox
	 */
	protected TextGuiTestObject text_quickCaseComboBox(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_quickCaseComboBox"), anchor, flags);
	}
	
	

	protected TS_ThousandFoldersHelper()
	{
		setScriptName("TestCases.TC_General.TS_ThousandFolders");
	}
	
}

