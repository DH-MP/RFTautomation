// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Netmail_WebAdmin;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>newStorageLocation</b><br>
 * Generated     : <b>2014/06/05 2:46:08 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows Server 2008 R2 x86 6.1 <br>
 * 
 * @since  June 05, 2014
 * @author Administrator
 */
public abstract class newStorageLocationHelper extends RationalTestScript
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * AddButton: with default state.
	 *		.type : button
	 * 		.value : Add 
	 * 		.class : Html.INPUT.button
	 * 		.name : BT_AddLocation
	 */
	protected GuiTestObject button_addButton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addButton"));
	}
	/**
	 * AddButton: with specific test context and state.
	 *		.type : button
	 * 		.value : Add 
	 * 		.class : Html.INPUT.button
	 * 		.name : BT_AddLocation
	 */
	protected GuiTestObject button_addButton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addButton"), anchor, flags);
	}
	
	/**
	 * addSuperUser: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Add 
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : C_AddSU
	 * 		.classIndex : 2
	 */
	protected GuiTestObject button_addSuperUser() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addSuperUser"));
	}
	/**
	 * addSuperUser: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Add 
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : C_AddSU
	 * 		.classIndex : 2
	 */
	protected GuiTestObject button_addSuperUser(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addSuperUser"), anchor, flags);
	}
	
	/**
	 * listUserAdd: with default state.
	 *		.text : 
	 * 		.id : bttnAdd
	 * 		.type : button
	 * 		.value : Add  >>
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_listUserAdd() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_listUserAdd"));
	}
	/**
	 * listUserAdd: with specific test context and state.
	 *		.text : 
	 * 		.id : bttnAdd
	 * 		.type : button
	 * 		.value : Add  >>
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_listUserAdd(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_listUserAdd"), anchor, flags);
	}
	
	/**
	 * ListUsersbutton: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : List Users
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_listUsersbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_listUsersbutton"));
	}
	/**
	 * ListUsersbutton: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : List Users
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_listUsersbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_listUsersbutton"), anchor, flags);
	}
	
	/**
	 * Nextbutton: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : BT_Next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_nextbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextbutton"));
	}
	/**
	 * Nextbutton: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Next
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : BT_Next
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_nextbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_nextbutton"), anchor, flags);
	}
	
	/**
	 * OKbutton: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : OK
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_oKbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_oKbutton"));
	}
	/**
	 * OKbutton: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : OK
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_oKbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_oKbutton"), anchor, flags);
	}
	
	/**
	 * Savebutton: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Save
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_savebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_savebutton"));
	}
	/**
	 * Savebutton: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Save
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_savebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_savebutton"), anchor, flags);
	}
	
	/**
	 * systemSave: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Save
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_systemSave() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_systemSave"));
	}
	/**
	 * systemSave: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Save
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_systemSave(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_systemSave"), anchor, flags);
	}
	
	/**
	 * ObjectDetails: with default state.
	 *		.title : Object Details
	 * 		.class : Html.HtmlDocument
	 */
	protected DocumentTestObject document_objectDetails() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_objectDetails"));
	}
	/**
	 * ObjectDetails: with specific test context and state.
	 *		.title : Object Details
	 * 		.class : Html.HtmlDocument
	 */
	protected DocumentTestObject document_objectDetails(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_objectDetails"), anchor, flags);
	}
	
	/**
	 * UserList: with default state.
	 *		.title : User List
	 * 		.class : Html.HtmlDocument
	 */
	protected DocumentTestObject document_userList() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_userList"));
	}
	/**
	 * UserList: with specific test context and state.
	 *		.title : User List
	 * 		.class : Html.HtmlDocument
	 */
	protected DocumentTestObject document_userList(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_userList"), anchor, flags);
	}
	
	/**
	 * divLocationTypes: with default state.
	 *		.className : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_divLocationTypes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divLocationTypes"));
	}
	/**
	 * divLocationTypes: with specific test context and state.
	 *		.className : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_divLocationTypes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_divLocationTypes"), anchor, flags);
	}
	
	/**
	 * Storage: with default state.
	 *		.text : Storage
	 * 		.class : Html.A
	 * 		.classIndex : 2
	 */
	protected GuiTestObject link_storage() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_storage"));
	}
	/**
	 * Storage: with specific test context and state.
	 *		.text : Storage
	 * 		.class : Html.A
	 * 		.classIndex : 2
	 */
	protected GuiTestObject link_storage(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_storage"), anchor, flags);
	}
	
	/**
	 * System: with default state.
	 *		.text : RegularExpression(System .*)
	 * 		.class : Html.A
	 */
	protected GuiTestObject link_system() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_system"));
	}
	/**
	 * System: with specific test context and state.
	 *		.text : RegularExpression(System .*)
	 * 		.class : Html.A
	 */
	protected GuiTestObject link_system(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_system"), anchor, flags);
	}
	
	/**
	 * select_RetentionDevices_Attachment: with default state.
	 *		.text : castor location1 loc1 ATI ALS RIF local Export outlookMSG TransendArchiveInjecti ...
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CSelect_RetentionDevices_Attachment
	 * 		class : 
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_select_RetentionDevices_A() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_select_RetentionDevices_A"));
	}
	/**
	 * select_RetentionDevices_Attachment: with specific test context and state.
	 *		.text : castor location1 loc1 ATI ALS RIF local Export outlookMSG TransendArchiveInjecti ...
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CSelect_RetentionDevices_Attachment
	 * 		class : 
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_select_RetentionDevices_A(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_select_RetentionDevices_A"), anchor, flags);
	}
	
	/**
	 * select_RetentionDevices_Archive: with default state.
	 *		.text : castor location1 loc1 ATI ALS RIF local Export outlookMSG TransendArchiveInjecti ...
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CSelect_RetentionDevices_Archive
	 * 		class : 
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_select_RetentionDevices_A2() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_select_RetentionDevices_A2"));
	}
	/**
	 * select_RetentionDevices_Archive: with specific test context and state.
	 *		.text : castor location1 loc1 ATI ALS RIF local Export outlookMSG TransendArchiveInjecti ...
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : CSelect_RetentionDevices_Archive
	 * 		class : 
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_select_RetentionDevices_A2(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_select_RetentionDevices_A2"), anchor, flags);
	}
	
	/**
	 * UserListA: with default state.
	 *		.text : @Eric1@DC@First Organization@User1@DC@First Organization@Usera888888888888888888 ...
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : 
	 * 		class : userlist
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_userListA() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_userListA"));
	}
	/**
	 * UserListA: with specific test context and state.
	 *		.text : @Eric1@DC@First Organization@User1@DC@First Organization@Usera888888888888888888 ...
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : 
	 * 		class : userlist
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_userListA(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_userListA"), anchor, flags);
	}
	
	/**
	 * RG_LocationTypeon: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : radio
	 * 		.value : on
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : RG_LocationType
	 * 		.classIndex : 1
	 * 		class : 
	 */
	protected ToggleGUITestObject radioButton_rG_LocationTypeon() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_rG_LocationTypeon"));
	}
	/**
	 * RG_LocationTypeon: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : radio
	 * 		.value : on
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : RG_LocationType
	 * 		.classIndex : 1
	 * 		class : 
	 */
	protected ToggleGUITestObject radioButton_rG_LocationTypeon(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_rG_LocationTypeon"), anchor, flags);
	}
	
	/**
	 * RG_LocationTypeon: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : radio
	 * 		.value : on
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : RG_LocationType
	 * 		.classIndex : 0
	 * 		class : 
	 */
	protected ToggleGUITestObject radioButton_rG_LocationTypeon2() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_rG_LocationTypeon2"));
	}
	/**
	 * RG_LocationTypeon: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : radio
	 * 		.value : on
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : RG_LocationType
	 * 		.classIndex : 0
	 * 		class : 
	 */
	protected ToggleGUITestObject radioButton_rG_LocationTypeon2(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_rG_LocationTypeon2"), anchor, flags);
	}
	
	/**
	 * auditPath: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : C_AuditPath
	 * 		class : clsPath
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_auditPath() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_auditPath"));
	}
	/**
	 * auditPath: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : C_AuditPath
	 * 		class : clsPath
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_auditPath(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_auditPath"), anchor, flags);
	}
	
	/**
	 * description: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : C_Description
	 * 		class : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_description() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_description"));
	}
	/**
	 * description: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : C_Description
	 * 		class : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_description(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_description"), anchor, flags);
	}
	
	/**
	 * name: with default state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : C_Name
	 * 		class : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_name() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_name"));
	}
	/**
	 * name: with specific test context and state.
	 *		.text : 
	 * 		type : text
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		name : C_Name
	 * 		class : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_name(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_name"), anchor, flags);
	}
	
	

	protected newStorageLocationHelper()
	{
		setScriptName("Netmail_WebAdmin.newStorageLocation");
	}
	
}

