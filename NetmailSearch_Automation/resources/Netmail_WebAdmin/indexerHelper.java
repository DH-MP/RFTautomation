// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Netmail_WebAdmin;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>indexer</b><br>
 * Generated     : <b>2014/05/21 9:13:30 AM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows Server 2008 R2 x86 6.1 <br>
 * 
 * @since  May 21, 2014
 * @author Administrator
 */
public abstract class indexerHelper extends RationalTestScript
{
	/**
	 * AddUser: with default state.
	 *		.text : 
	 * 		.id : bttnAdd
	 * 		.type : button
	 * 		.value : Add  >>
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_addUser() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addUser"));
	}
	/**
	 * AddUser: with specific test context and state.
	 *		.text : 
	 * 		.id : bttnAdd
	 * 		.type : button
	 * 		.value : Add  >>
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_addUser(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_addUser"), anchor, flags);
	}
	
	/**
	 * HtmlDialogButtonOK: with default state.
	 *		.text : OK
	 * 		.class : Html.DialogButton
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_htmlDialogButtonOK() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_htmlDialogButtonOK"));
	}
	/**
	 * HtmlDialogButtonOK: with specific test context and state.
	 *		.text : OK
	 * 		.class : Html.DialogButton
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_htmlDialogButtonOK(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_htmlDialogButtonOK"), anchor, flags);
	}
	
	/**
	 * LoadUsers: with default state.
	 *		.type : button
	 * 		.value : Load
	 * 		.class : Html.INPUT.button
	 */
	protected GuiTestObject button_loadUsers() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_loadUsers"));
	}
	/**
	 * LoadUsers: with specific test context and state.
	 *		.type : button
	 * 		.value : Load
	 * 		.class : Html.INPUT.button
	 */
	protected GuiTestObject button_loadUsers(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_loadUsers"), anchor, flags);
	}
	
	/**
	 * OKbutton: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : OK
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_oKbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_oKbutton"));
	}
	/**
	 * OKbutton: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : OK
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_oKbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_oKbutton"), anchor, flags);
	}
	
	/**
	 * RunNowbutton: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Run Now
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : btnRunNow
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_runNowbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_runNowbutton"));
	}
	/**
	 * RunNowbutton: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Run Now
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : btnRunNow
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_runNowbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_runNowbutton"), anchor, flags);
	}
	
	/**
	 * Savebutton: with default state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Save
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_savebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_savebutton"));
	}
	/**
	 * Savebutton: with specific test context and state.
	 *		.text : 
	 * 		.id : 
	 * 		.type : button
	 * 		.value : Save
	 * 		.title : 
	 * 		.class : Html.INPUT.button
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_savebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_savebutton"), anchor, flags);
	}
	
	/**
	 * SelectUsers: with default state.
	 *		.type : button
	 * 		.value : Select
	 * 		.class : Html.INPUT.button
	 * 		.name : CButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_selectUsers() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_selectUsers"));
	}
	/**
	 * SelectUsers: with specific test context and state.
	 *		.type : button
	 * 		.value : Select
	 * 		.class : Html.INPUT.button
	 * 		.name : CButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_selectUsers(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_selectUsers"), anchor, flags);
	}
	
	/**
	 * indexInstance: with default state.
	 *		.text : index
	 * 		.className : clsDisabled
	 * 		.title : 
	 * 		.class : Html.SPAN
	 */
	protected GuiTestObject html_indexInstance() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_indexInstance"));
	}
	/**
	 * indexInstance: with specific test context and state.
	 *		.text : index
	 * 		.className : clsDisabled
	 * 		.title : 
	 * 		.class : Html.SPAN
	 */
	protected GuiTestObject html_indexInstance(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_indexInstance"), anchor, flags);
	}
	
	/**
	 * ExpandIndexAgent: with default state.
	 *		.alt : Expand
	 * 		.class : Html.IMG
	 */
	protected StatelessGuiSubitemTestObject image_expandIndexAgent() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_expandIndexAgent"));
	}
	/**
	 * ExpandIndexAgent: with specific test context and state.
	 *		.alt : Expand
	 * 		.class : Html.IMG
	 */
	protected StatelessGuiSubitemTestObject image_expandIndexAgent(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_expandIndexAgent"), anchor, flags);
	}
	
	/**
	 * Criteria: with default state.
	 *		.text : Criteria
	 * 		.class : Html.A
	 * 		.classIndex : 1
	 */
	protected GuiTestObject link_criteria() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_criteria"));
	}
	/**
	 * Criteria: with specific test context and state.
	 *		.text : Criteria
	 * 		.class : Html.A
	 * 		.classIndex : 1
	 */
	protected GuiTestObject link_criteria(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_criteria"), anchor, flags);
	}
	
	/**
	 * JobSettings: with default state.
	 *		.text : Job Settings
	 * 		.class : Html.A
	 */
	protected GuiTestObject link_jobSettings() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_jobSettings"));
	}
	/**
	 * JobSettings: with specific test context and state.
	 *		.text : Job Settings
	 * 		.class : Html.A
	 */
	protected GuiTestObject link_jobSettings(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_jobSettings"), anchor, flags);
	}
	
	/**
	 * ArchiveLocationList: with default state.
	 *		.class : Html.SELECT
	 * 		.name : CSelect_ArchiveLocationList
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_archiveLocationList() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_archiveLocationList"));
	}
	/**
	 * ArchiveLocationList: with specific test context and state.
	 *		.class : Html.SELECT
	 * 		.name : CSelect_ArchiveLocationList
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_archiveLocationList(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_archiveLocationList"), anchor, flags);
	}
	
	/**
	 * UserListLeftBox: with default state.
	 *		.id : UserListA
	 * 		.class : Html.SELECT
	 * 		class : userlist
	 */
	protected SelectGuiSubitemTestObject list_userListLeftBox() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_userListLeftBox"));
	}
	/**
	 * UserListLeftBox: with specific test context and state.
	 *		.id : UserListA
	 * 		.class : Html.SELECT
	 * 		class : userlist
	 */
	protected SelectGuiSubitemTestObject list_userListLeftBox(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_userListLeftBox"), anchor, flags);
	}
	
	/**
	 * reCreateIndex: with default state.
	 *		.type : radio
	 * 		.value : on
	 * 		.class : Html.INPUT.radio
	 * 		.name : CRG_Mode
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject radioButton_reCreateIndex() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_reCreateIndex"));
	}
	/**
	 * reCreateIndex: with specific test context and state.
	 *		.type : radio
	 * 		.value : on
	 * 		.class : Html.INPUT.radio
	 * 		.name : CRG_Mode
	 * 		.classIndex : 1
	 */
	protected ToggleGUITestObject radioButton_reCreateIndex(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_reCreateIndex"), anchor, flags);
	}
	
	

	protected indexerHelper()
	{
		setScriptName("Netmail_WebAdmin.indexer");
	}
	
}

